<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>postman</title>
    <link href="/2021/12/09/postman/"/>
    <url>/2021/12/09/postman/</url>
    
    <content type="html"><![CDATA[<h3 id="postman常见使用"><a href="#postman常见使用" class="headerlink" title="postman常见使用"></a>postman常见使用</h3><h4 id="1、断言："><a href="#1、断言：" class="headerlink" title="1、断言："></a>1、断言：</h4><p> 常用断言：（有颜色的部分代表可根据具体的接口情况进行变换）<br>（1）</p><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">pm.test(&quot;内容msg为成功&quot;, <span class="hljs-keyword">function</span> () &#123;<br>    pm.expect(pm.response.text()).<span class="hljs-keyword">to</span>.<span class="hljs-keyword">include</span>(&quot;成功&quot;);<br>&#125;);   // 说明：响应的内容中包括“成功”<br></code></pre></td></tr></table></figure><p>（2）</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">pm.test(<span class="hljs-string">&quot;验证msg为成功&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">var</span> jsonData = pm.response.json();<br>    pm.expect(jsonData.msg).to.eql(<span class="hljs-string">&quot;成功&quot;</span>);<br>&#125;);    <span class="hljs-comment">//说明：响应的结果中验证“msg”的值是否为“成功”</span><br></code></pre></td></tr></table></figure><p><img src="%22https://imgtu.com/i/o4m7kD%22" alt="示例图片"></p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">pm.test(<span class="hljs-string">&quot;验证列表中的第一个人是否是范卓&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>&#123;<br>    <span class="hljs-keyword">var</span> jsonData = pm.response.json();<br>    pm.expect(jsonData.data.list[<span class="hljs-number">0</span>].name).to.eql(<span class="hljs-string">&quot;范卓&quot;</span>);<br>&#125;);    <span class="hljs-comment">//说明：响应的结果中验证“msg”的值是否为“成功”</span><br></code></pre></td></tr></table></figure><p>（3）</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">pm.test(<span class="hljs-string">&quot;Response time is less than 200ms&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>&#123;<br>    pm.expect(pm.response.responseTime).to.be.below(<span class="hljs-number">200</span>);<br>&#125;);   <span class="hljs-comment">//说明：检验响应时间是都超过200ms</span><br></code></pre></td></tr></table></figure><p>（4）</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">pm.test(<span class="hljs-string">&quot;Status code is 200&quot;</span>, <span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-params">()</span> </span>&#123;<br>    pm.response.to.have.status(<span class="hljs-number">200</span>);<br>&#125;);     <span class="hljs-comment">//说明：验证响应状态码是否为200</span><br></code></pre></td></tr></table></figure><h4 id="2、在test中设置环境变量："><a href="#2、在test中设置环境变量：" class="headerlink" title="2、在test中设置环境变量："></a>2、在test中设置环境变量：</h4><p>常用情景：将A接口中的响应结果值用在B的请求参数中，在A接口中</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs reasonml"><span class="hljs-comment">//获取返回的JSON信息</span><br>res = <span class="hljs-module-access"><span class="hljs-module"><span class="hljs-identifier">JSON</span>.</span></span>parse(responseBody)<br></code></pre></td></tr></table></figure><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs kotlin"><span class="hljs-comment">//将接口搜索人员信息中返回的人员的id的值设置为环境变量，变量名为person_id，在B接口中引用该变量</span><br>pm.environment.<span class="hljs-keyword">set</span>(<span class="hljs-string">&quot;person_id&quot;</span>,res.<span class="hljs-keyword">data</span>.list[<span class="hljs-number">0</span>].id);<br></code></pre></td></tr></table></figure><h4 id="3、随机数："><a href="#3、随机数：" class="headerlink" title="3、随机数："></a>3、随机数：</h4><p>说明：在pre-request-script中添加，然后在请求体中直接引用变量<br>（1）postman自带随机数：五种<br>    *  添加一个当前的时间戳<br>    *  添加一个时分秒的时间戳<br>    *  添加一个v4风格的guid<br>    *  添加一个 0–1000的随机整数<br>    *  添加一个0–1000的随机浮点数</p><p><img src="%22https://imgtu.com/i/o4mI0K%22" alt="示例图片"></p><p>（2）随机生成姓名：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getName</span>(<span class="hljs-params"></span>)</span>&#123;<br>    <span class="hljs-keyword">var</span> familyNames = <span class="hljs-string">&quot;赵钱孙李周吴郑王冯陈褚卫蒋沈韩杨朱秦尤许何吕施张孔曹严华金魏陶姜戚谢邹喻柏水窦章云苏潘葛奚范彭郎鲁韦昌马苗凤花方俞任袁柳酆鲍史唐费廉岑薛雷贺倪汤滕殷罗毕郝邬安常乐于时傅皮卞齐康伍余元卜顾孟平黄和穆萧尹姚邵湛汪祁毛禹狄米贝明臧计伏成戴谈宋茅庞熊纪舒屈项祝董梁杜阮蓝闵席季麻强贾路娄危江童颜郭梅盛林刁钟徐邱骆高夏蔡田樊胡凌霍虞万支柯昝管卢莫经房裘缪干解应宗丁宣贲邓郁单杭洪包诸左石崔吉钮龚程嵇邢滑裴陆荣翁荀羊於惠甄曲家封芮羿储靳汲邴糜松井段富巫乌焦巴弓牧隗山谷车侯宓蓬全郗班仰秋仲伊宫宁仇栾暴甘钭厉戎祖武符刘景詹束龙叶幸司韶郜黎蓟薄印宿白怀蒲邰从鄂索咸籍赖卓蔺屠蒙池乔阴鬱胥能苍双闻莘党翟谭贡劳逄姬申扶堵冉宰郦雍卻璩桑桂濮牛寿通边扈燕冀郏浦尚农温别庄晏柴瞿阎充慕连茹习宦艾鱼容向古易慎戈廖庾终暨居衡步都耿满弘匡国文寇广禄阙东欧殳沃利蔚越夔隆师巩厍聂晁勾敖融冷訾辛阚那简饶空曾毋沙乜养鞠须丰巢关蒯相查后荆红游竺权逯盖益桓公万俟司马上官欧阳夏侯诸葛闻人东方赫连皇甫尉迟公羊澹台公冶宗政濮阳淳于单于太叔申屠公孙仲孙轩辕令狐钟离宇文长孙慕容鲜于闾丘司徒司空丌官司寇仉督子车颛孙端木巫马公西漆雕乐正壤驷公良拓跋夹谷宰父谷梁晋楚闫法汝鄢涂钦段干百里东郭南门呼延归海羊舌微生岳帅缑亢况郈有琴梁丘左丘东门西门商牟佘佴伯赏南宫墨哈谯笪年爱阳佟&quot;</span>;<br>    <span class="hljs-keyword">var</span> givenNames = <span class="hljs-string">&quot;子璇淼国栋夫子瑞堂甜敏尚国贤贺祥晨涛昊轩易轩辰益帆冉瑾春瑾昆春齐杨文昊东雄霖浩晨熙涵溶溶冰枫欣宜豪欣慧建政美欣淑慧文轩杰欣源忠林榕润欣汝慧嘉新建建林亦菲林冰洁佳欣涵涵禹辰淳美泽惠伟洋涵越润丽翔淑华晶莹凌晶苒溪雨涵嘉怡佳毅子辰佳琪紫轩瑞辰昕蕊萌明远欣宜泽远欣怡佳怡佳惠晨茜晨璐运昊汝鑫淑君晶滢润莎榕汕佳钰佳玉晓庆一鸣语晨添池添昊雨泽雅晗雅涵清妍诗悦嘉乐晨涵天赫玥傲佳昊天昊萌萌若萌&quot;</span>;<br>    <span class="hljs-keyword">var</span> i = <span class="hljs-built_in">parseInt</span>(familyNames.length * <span class="hljs-built_in">Math</span>.random());<br>    <span class="hljs-keyword">var</span> familyName = familyNames.substr(i,<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">var</span> len=givenNames.length;<br>    <span class="hljs-keyword">var</span> j = <span class="hljs-built_in">parseInt</span>(len * <span class="hljs-built_in">Math</span>.random()) ;<br>    <span class="hljs-keyword">var</span> k = <span class="hljs-built_in">parseInt</span>(len * <span class="hljs-built_in">Math</span>.random()) ;<br>    <span class="hljs-keyword">var</span> givenName = givenNames.substr(j,<span class="hljs-number">1</span>)+givenNames.substr(k,<span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">var</span> name = familyName + givenName;<br>    <span class="hljs-keyword">return</span> name;<br>&#125;<br><span class="hljs-built_in">console</span>.log(getName());      <span class="hljs-comment">//在控制台打印输出</span><br>pm.globals.set(<span class="hljs-string">&quot;random_name&quot;</span>, getName())    <span class="hljs-comment">//设置随机姓名设置为全局变量</span><br></code></pre></td></tr></table></figure><p>（3）随机生成电话号码：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">getMoble</span>(<span class="hljs-params"></span>) </span>&#123;<br>    <span class="hljs-keyword">var</span> prefixArray = <span class="hljs-keyword">new</span> <span class="hljs-built_in">Array</span>(<span class="hljs-string">&quot;130&quot;</span>, <span class="hljs-string">&quot;131&quot;</span>, <span class="hljs-string">&quot;132&quot;</span>, <span class="hljs-string">&quot;133&quot;</span>, <span class="hljs-string">&quot;135&quot;</span>, <span class="hljs-string">&quot;137&quot;</span>, <span class="hljs-string">&quot;138&quot;</span>, <span class="hljs-string">&quot;170&quot;</span>, <span class="hljs-string">&quot;187&quot;</span>, <span class="hljs-string">&quot;177&quot;</span>, <span class="hljs-string">&quot;189&quot;</span>);<br>    <span class="hljs-keyword">var</span> i = <span class="hljs-built_in">parseInt</span>(<span class="hljs-number">10</span> * <span class="hljs-built_in">Math</span>.random());<br>    <span class="hljs-keyword">var</span> prefix = prefixArray[i];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> j = <span class="hljs-number">0</span>; j &lt; <span class="hljs-number">8</span>; j++) &#123;<br>        prefix = prefix + <span class="hljs-built_in">Math</span>.floor(<span class="hljs-built_in">Math</span>.random() * <span class="hljs-number">10</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> prefix;<br>&#125;<br><span class="hljs-built_in">console</span>.log(getMoble());     <span class="hljs-comment">//在控制台打印输出</span><br>pm.globals.set(<span class="hljs-string">&quot;random_mobile_phone&quot;</span>, getMoble());    <span class="hljs-comment">//设置随机电话号码设置为全局变量</span><br></code></pre></td></tr></table></figure><p>（4）随机生成身份证号码</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs stata">function getId_no()&#123;<br>    <span class="hljs-keyword">var</span> coefficientArray = [ <span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;10&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>,<span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;10&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>];<br>    <span class="hljs-keyword">var</span> lastNumberArray = [ <span class="hljs-string">&quot;1&quot;</span>,<span class="hljs-string">&quot;0&quot;</span>,<span class="hljs-string">&quot;X&quot;</span>,<span class="hljs-string">&quot;9&quot;</span>,<span class="hljs-string">&quot;8&quot;</span>,<span class="hljs-string">&quot;7&quot;</span>,<span class="hljs-string">&quot;6&quot;</span>,<span class="hljs-string">&quot;5&quot;</span>,<span class="hljs-string">&quot;4&quot;</span>,<span class="hljs-string">&quot;3&quot;</span>,<span class="hljs-string">&quot;2&quot;</span>];<br>    <span class="hljs-keyword">var</span> address = <span class="hljs-string">&quot;610523&quot;</span>;<br>    <span class="hljs-keyword">var</span> birthday = <span class="hljs-string">&quot;19990101&quot;</span>;  <br>    <span class="hljs-keyword">var</span> s = Math.<span class="hljs-built_in">floor</span>(Math.random()*10).<span class="hljs-keyword">toString</span>() + Math.<span class="hljs-built_in">floor</span>(Math.random()*10).<span class="hljs-keyword">toString</span>() + Math.<span class="hljs-built_in">floor</span>(Math.random()*10).<span class="hljs-keyword">toString</span>();<br>    <span class="hljs-keyword">var</span> array = (address + birthday + s).<span class="hljs-keyword">split</span>(<span class="hljs-string">&quot;&quot;</span>);<br>    <span class="hljs-keyword">var</span> <span class="hljs-keyword">total</span> = 0;<br>    <span class="hljs-keyword">for</span>(<span class="hljs-keyword">var</span> i <span class="hljs-keyword">in</span> array)&#123;<br>    <span class="hljs-keyword">total</span> = <span class="hljs-keyword">total</span> + parseInt(array[i])*parseInt(coefficientArray[i]);<br>    &#125;<br>    <span class="hljs-keyword">var</span> lastNumber = lastNumberArray[parseInt(<span class="hljs-keyword">total</span>%11)];<br>    <span class="hljs-keyword">var</span> id_no_String = address + birthday + s + lastNumber;<br>    <span class="hljs-keyword">return</span> id_no_String;<br>&#125;<br>console.<span class="hljs-built_in">log</span>(getId_no());     <span class="hljs-comment">//在控制台打印输出</span><br>pm.globals.<span class="hljs-keyword">set</span>(<span class="hljs-string">&quot;random_id_no&quot;</span>,getId_no());      <span class="hljs-comment">//设置随机身份证号码设置为全局变量</span><br></code></pre></td></tr></table></figure><p>（5）随机获取一个0-9999的随机数</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs arduino">    <span class="hljs-function">function <span class="hljs-title">getRandomInt</span><span class="hljs-params">(min, max)</span> </span>&#123;<br>        min = Math.<span class="hljs-built_in">ceil</span>(min);<br>        max = Math.<span class="hljs-built_in">floor</span>(max);<br>        <span class="hljs-keyword">return</span> Math.<span class="hljs-built_in">floor</span>(Math.<span class="hljs-built_in">random</span>() * (max - min)) + min;<br>        &#125;<br>var myval = <span class="hljs-built_in">getRandomInt</span>(<span class="hljs-number">0</span>,<span class="hljs-number">10000</span>);<br><br>console.<span class="hljs-built_in">log</span>(myval);     <span class="hljs-comment">//在控制台打印输出</span><br>pm.globals.<span class="hljs-built_in">set</span>(<span class="hljs-string">&quot;random_num&quot;</span>,<span class="hljs-built_in">getRandomInt</span>());   <br></code></pre></td></tr></table></figure><h4 id="4、将postman的脚本转化为python代码在pycharm中运行"><a href="#4、将postman的脚本转化为python代码在pycharm中运行" class="headerlink" title="4、将postman的脚本转化为python代码在pycharm中运行"></a>4、将postman的脚本转化为python代码在pycharm中运行</h4><p>选择一个接口，点击右边的code  然后选择将其转化为python的requests，copy到pycharm去粘贴（注意在pycharm内添加requests包，最好使用python2.7，使用python3+可能会报错）</p><p><img src="%22https://imgtu.com/i/o4mHte%22" alt="示例图片"></p>]]></content>
    
    
    
    <tags>
      
      <tag>postman</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>haohao</title>
    <link href="/2021/12/06/haohao/"/>
    <url>/2021/12/06/haohao/</url>
    
    <content type="html"><![CDATA[<h3 id="xiao-test"><a href="#xiao-test" class="headerlink" title="xiao test"></a>xiao test</h3>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/12/06/hello-world/"/>
    <url>/2021/12/06/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
